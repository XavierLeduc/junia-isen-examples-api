name: Cloud_Project_ElLel_XaLed_EmCor

on:
  pull_request:
    branches: [ "main", "Xavier", "Emile", "eliot" ]
    types: [opened, synchronize]
  push:
    branches:
      - main
      - eliot
      - Xavier
      - Emile

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build_docker_image:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/eliot' || github.ref == 'refs/heads/Xavier' || github.ref == 'refs/heads/Emile'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_application:
    name: Deploy application with Terraform
    needs: build_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Vérification des permissions Azure
        run: |
          az role assignment list --assignee ${{ secrets.AZURE_CLIENT_ID }} --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Attribuer les permissions nécessaires
        run: |
          az role assignment create \
            --assignee ${{ secrets.AZURE_CLIENT_ID }} \
            --role "Contributor" \
            --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Initialize Terraform
        working-directory: ./infrastructure
        run: terraform init

      - name: Plan Terraform changes
        working-directory: ./infrastructure
        run: terraform plan -var "docker_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

      - name: Apply Terraform changes
        working-directory: ./infrastructure
        run: terraform apply -auto-approve -var "docker_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
